using System;
using System.Collections.Generic;
using System.Text;

namespace CarSalesman
{
    public class StartUp
    {
        static void Main(string[] args)
        {
            var cars = new List<Car>();
            var engines = new List<Engine>();
            var N = int.Parse(Console.ReadLine());
            for (int i = 0; i < N; i++)
            {
                var input = Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries);
                var wordCount = new HashSet<string>();
                foreach (var item in input)
                {
                    wordCount.Add(item);
                }
                if (wordCount.Count < 3)
                {
                    var engine = new Engine(input[0], int.Parse(input[1]));
                    engines.Add(engine);
                }
                else if (wordCount.Count == 3)
                {
                    int displacement;
                    var isDigit = int.TryParse(input[2], out displacement);
                    if (isDigit)
                    {
                        var engine = new Engine(input[0], int.Parse(input[1]), int.Parse(input[2]));
                        engines.Add(engine);
                    }
                    else if (input[2] is string)
                    {
                        var engine = new Engine(input[0], int.Parse(input[1]), input[2]);
                        engines.Add(engine);
                    }
                }
                else
                {
                    var engine = new Engine(input[0], int.Parse(input[1]), int.Parse(input[2]), input[3]);
                    engines.Add(engine);
                }
            }
            var M = int.Parse(Console.ReadLine());
            for (int i = 0; i < M; i++)
            {
                var input = Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries);
                var wordCount = new HashSet<string>();
                foreach (var item in input)
                {
                    wordCount.Add(item);
                }
                if (wordCount.Count < 3)
                {
                    var car = new Car(input[0], engines.Find(x => x.Model == input[1]));
                    cars.Add(car);
                }
                else if (wordCount.Count == 3)
                {
                    int weight;
                    var isDigit = int.TryParse(input[2], out weight);
                    if (isDigit)
                    {
                        var car = new Car(input[0], engines.Find(x => x.Model == input[1]), weight);
                        cars.Add(car);
                    }
                    else if (input[2] is string)
                    {
                        var car = new Car(input[0], engines.Find(x => x.Model == input[1]), input[2]);
                        cars.Add(car);
                    }
                    
                    
                }
                else
                {
                    var car = new Car(input[0], engines.Find(x => x.Model == input[1]), int.Parse(input[2]), input[3]);
                    cars.Add(car);
                }
            }
            
            foreach (var car in cars)
            {
                Console.WriteLine($"{car.Model}:");
                Console.WriteLine($" {car.Engine.Model}:");
                foreach ( var engine in engines)
                {
                    if (car.Engine.Model == engine.Model)
                    {
                        Console.WriteLine($"  Power: {engine.Power}");
                        if (engine.Displacement == 0)
                        {
                            Console.WriteLine($"  Displacement: n/a");
                        }
                        else
                        {
                            Console.WriteLine($"  Displacement: {engine.Displacement}");
                        }                       
                        Console.WriteLine($"  Efficiency: {engine.Efficiency}");
                       
                    }
                }
                if (car.Weight == 0)
                {
                    Console.WriteLine($" Weight: n/a");
                }
                else
                {
                    Console.WriteLine($" Weight: {car.Weight}");
                }             
                Console.WriteLine($" Color: {car.Color}");
            }
            
        }
    }
    public class Engine
    {
        public string Model { get; set; }
        public int Power { get; set; }
        public int Displacement { get; set; }
        public string Efficiency { get; set; }

        public Engine(string model, int power)
        {
            Model = model;
            Power = power;
            Efficiency = "n/a";
        }
        public Engine(string model, int power, int displacement)
        {
            Model = model;
            Power = power;
            Displacement = displacement;
            Efficiency = "n/a";
        }
        public Engine(string model, int power, string efficiency)
        {
            Model = model;
            Power = power;
            Efficiency = efficiency;
        }
        public Engine(string model, int power, int displacement, string efficiency)
        {
            Model = model;
            Power = power;
            Displacement = displacement;
            Efficiency = efficiency;
        }
    }
    public class Car
    {
        public string Model { get; set; }
        public Engine Engine { get; set; }
        public int Weight { get; set; }
        public string Color { get; set; }

       
        public Car(string model, Engine engine)
        {
            Model = model;
            Engine = engine;
            Weight.ToString("n/a");
            Color = "n/a";
        }
        public Car(string model, Engine engine, int weight)
        {
            Model = model;
            Engine = engine;
            Weight = weight;
            Color = "n/a";
        }
        public Car(string model, Engine engine, string color)
        {
            Model = model;
            Engine = engine;
            Color = color;
        }
        public Car(string model, Engine engine, int weight, string color)
        {
            Model = model;
            Engine = engine;
            Weight = weight;
            Color = color;
        }
    }
}
