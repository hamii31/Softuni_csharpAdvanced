using System;
using System.Collections.Generic;
using System.Linq;

namespace functional_programing
{
    class Program
    {
        static void Main(string[] args)
        {
            var guests = new List<string>(Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries));
           
            while (true)
            {
                var input = Console.ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries);
                var command = input[0];
                if (command == "Party!")
                {
                    break;
                }
                if (command == "Remove")
                {
                    var command2 = input[1];
                    if (command2 == "StartsWith" || command2 == "EndsWith")
                    {
                        var letter = input[2];
                        Predicate<string> remove = x => x.Contains(letter);
                        guests.RemoveAll(remove);
                    }             
                    else
                    {
                        var length = Convert.ToInt32(input[2]);
                        Predicate<string> longEnough = x => x.Count() == length;
                        guests.RemoveAll(longEnough);
                       
                    }
                    
                }
                else if (command == "Double")
                {
                    var command2 = input[1];
                    if (command2 == "StartsWith" || command2 == "EndsWith")
                    {
                        var letter = input[2];
                        Predicate<string> add = x => x.Contains(letter);
                        var guestsToDouble = guests.FindAll(add);
                        var index = guests.FindIndex(add);
                        if (index >= 0)
                        {
                            guests.InsertRange(index, guestsToDouble);
                        }

                    }
                    else
                    {
                        
                        var length = Convert.ToInt32(input[2]);
                        Predicate<string> longEnough = x => x.Count() == length;
                        var guestsToDouble = guests.FindAll(longEnough);
                        var index = guests.FindIndex(longEnough);
                        if (index >= 0)
                        {
                            guests.InsertRange(index, guestsToDouble);
                        }
                       

                    }
                }
               
            }
            if (guests.Any())
            {
                Console.Write(string.Join(", ", guests));
                Console.Write(" are going to the party!");
            }
            else
            {
                Console.WriteLine("Nobody is going to the party!");
            }
           
        }
    }
}
