using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace StacksAndQueues
{
    class Program
    {
        static void Main(string[] args)
        {
            var bulletPrice = int.Parse(Console.ReadLine());
            var barrelSize = int.Parse(Console.ReadLine());
            var bulletTypes = Console.ReadLine().Split().Select(int.Parse).ToArray();
            var lockTypes = Console.ReadLine().Split().Select(int.Parse).ToArray();
            var intelValue = int.Parse(Console.ReadLine());
            var locks = new Queue<int>(lockTypes);
            var bullets = new Stack<int>(bulletTypes);
            var bulletsShot = 0;
            while (locks.Any() && bullets.Any())
            {
                Startshooting(bullets, locks, ref bulletsShot, barrelSize);
            }
            if (locks.Any())
            {
                Console.WriteLine($"Couldn't get through. Locks left: {locks.Count}");
            }
            else
            {
                Console.WriteLine($"{bullets.Count} bullets left. Earned ${intelValue - (bulletsShot * bulletPrice)}");
            }
        }

        static void Startshooting(Stack<int> bullets, Queue<int> locks, ref int bulletsShot, int barrelSize)
        {
            var bulletSize = bullets.Pop();
            var lockSize = locks.Peek();
            bulletsShot++;
            if (bulletSize <= lockSize)
            {
                locks.Dequeue();
                Console.WriteLine("Bang!");
            }
            else
            {
                Console.WriteLine("Ping!");
            }
            if (bulletsShot % barrelSize == 0 && bullets.Any())
            {
                Console.WriteLine("Reloading!");
            }
        }

    }
}
