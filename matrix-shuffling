using System;
using System.Collections.Generic;
using System.Linq;

namespace maximal_sum
{
    class Program
    {
        static void Main(string[] args)
        {
            var size = Console.ReadLine().Split().Select(n => int.Parse(n)).ToArray();
            var rows = size[0];
            string[][] jaggedArray = new string[rows][];
            for (int row = 0; row < rows; row++)
            {
                var columns = Console.ReadLine().Split().ToArray();
                jaggedArray[row] = columns;
            }
            var command = string.Empty;
            while (command != "END")
            {
                var input = Console.ReadLine().Split();
                command = input[0];

                if (command == "swap")
                {
                    var row1 = Convert.ToInt32(input[1]);
                    var col1 = Convert.ToInt32(input[2]);
                    var row2 = Convert.ToInt32(input[3]);
                    var col2 = Convert.ToInt32(input[4]);
                    if (row1 < 0 || row1 >= jaggedArray.Length || col1 < 0 || col1 >= jaggedArray.Length
                        && row2 < 0 || row2 >= jaggedArray.Length || col2 < 0 || col2 >= jaggedArray.Length)
                    {
                        Console.WriteLine("Invalid input!");
                    }
                    else
                    {
                        var modifiedPosition1 = jaggedArray[row2][col2];
                        var modifiedPosition2 = jaggedArray[row1][col1];
                        jaggedArray[row1][col1] = modifiedPosition1;
                        jaggedArray[row2][col2] = modifiedPosition2;

                        PrintMatrix(jaggedArray);
                    }
                }
                                                     
            }
            
        }

        private static void PrintMatrix(string[][] jaggedArray)
        {
            foreach (string[] row in jaggedArray)
            {
                Console.WriteLine(string.Join(" ", row));
            }
        }
    }
}
